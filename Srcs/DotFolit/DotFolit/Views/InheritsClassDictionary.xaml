<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="clr-namespace:DotFolit">

    <local:TreeNodeKindsToImageConverter x:Key="TreeNodeKindsToImageConverter" />
    <local:TreeNodeKindsToStringConverter x:Key="TreeNodeKindsToStringConverter" />

    <ControlTemplate x:Key="ClassMemberTemplate">

        <Border 
            BorderThickness="1" 
            CornerRadius="5"
            Padding="10">

            <Border.Style>
                <Style TargetType="Border">

                    <!-- 
                    DataTrigger が動作しない現象の対応
                    Border タグ直下に設定するのではなく、Style 内で、デフォルト値を設定するように変更
                    → 設定した値の優位性の仕様とか
                    
                    WPF Style DataTrigger with binding to DataContext not working
                    https://stackoverflow.com/questions/19319215/wpf-style-datatrigger-with-binding-to-datacontext-not-working/19319456
                    詳細は、以下リンク先の仕様を参照とのこと

                    Dependency Property Value Precedence
                    https://docs.microsoft.com/en-us/dotnet/framework/wpf/advanced/dependency-property-value-precedence
                    -->
                    <Setter Property="BorderBrush" Value="Tomato" />
                    <Setter Property="Background" Value="LavenderBlush" />

                    <!-- ターゲットクラスの場合は、別の枠色・背景色に変更 -->
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding IsTargetClass}" Value="True">
                            <Setter Property="BorderBrush" Value="Blue" />
                            <Setter Property="Background" Value="AliceBlue" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Border.Style>

            <StackPanel>

                <Expander
                    Header="{Binding ClassName}"
                    IsExpanded="True">

                    <TreeView
                        ItemsSource="{Binding TreeItems}"
                        Padding="10,10,30,10"
                        VirtualizingStackPanel.IsVirtualizing="True"
                        VirtualizingStackPanel.VirtualizationMode="Recycling">

                        <TreeView.Resources>

                            <Style TargetType="TreeViewItem">

                                <Setter Property="IsExpanded" Value="{Binding IsExpanded, Mode=TwoWay}" />
                                <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}" />

                                <!-- ツリーを展開した際、隣のツリーとの間の隙間を広げて、見やすくする -->
                                <Style.Triggers>
                                    <Trigger Property="IsExpanded" Value="True">
                                        <Setter Property="Margin" Value="0,0,0,10" />
                                    </Trigger>
                                </Style.Triggers>

                            </Style>

                        </TreeView.Resources>

                        <TreeView.ItemTemplate>
                            <HierarchicalDataTemplate DataType="{x:Type local:TreeViewItemModel}" ItemsSource="{Binding Children}">

                                <StackPanel Orientation="Horizontal">
                                    <Image Name="image1" Source="{Binding TreeNodeKind, Converter={StaticResource TreeNodeKindsToImageConverter}}" Margin="5,0,2,0" />
                                    <TextBlock Name="textblock1" Text="{Binding Text}" />
                                </StackPanel>

                            </HierarchicalDataTemplate>
                        </TreeView.ItemTemplate>

                    </TreeView>

                </Expander>

            </StackPanel>

        </Border>

    </ControlTemplate>

</ResourceDictionary>
