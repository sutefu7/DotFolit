<Window x:Class="MainView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:DotFolit"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions"
        xmlns:l="http://schemas.livet-mvvm.net/2011/wpf"
        xmlns:dock="http://schemas.xceed.com/wpf/xaml/avalondock"
        xmlns:dd="clr-namespace:GongSolutions.Wpf.DragDrop;assembly=GongSolutions.Wpf.DragDrop"
        mc:Ignorable="d"
        Title="DotFolit" Height="400" Width="800"
        dd:DragDrop.IsDropTarget="True"
        dd:DragDrop.DropHandler="{Binding}">

    <!--
    この画面を開いた時に、以下のようなエラーが表示されたら、いったんリビルドしてみてください。
    
    型 'LayoutInsertTarget' の値は、型 'List' のコレクションまたは辞書に追加できません。
    型 'LayoutItemTypedStyle' の値は、型 'List' のコレクションまたは辞書に追加できません。
    型 'LayoutItemTypedStyle' の値は、型 'List' のコレクションまたは辞書に追加できません。
    -->
    
    <i:Interaction.Triggers>
        
        <!-- 情報メッセージ、ViewModel からキー名を指定して呼び出される -->
        <l:InteractionMessageTrigger Messenger="{Binding Messenger}" MessageKey="Information">
            <l:InformationDialogInteractionMessageAction />
        </l:InteractionMessageTrigger>

        <!-- 警告メッセージ、ViewModel からキー名を指定して呼び出される -->
        <l:InteractionMessageTrigger Messenger="{Binding Messenger}" MessageKey="Warning">
            <l:InformationDialogInteractionMessageAction />
        </l:InteractionMessageTrigger>

        <!-- エラーメッセージ、ViewModel からキー名を指定して呼び出される -->
        <l:InteractionMessageTrigger Messenger="{Binding Messenger}" MessageKey="Error">
            <l:InformationDialogInteractionMessageAction />
        </l:InteractionMessageTrigger>

        <!-- 確認メッセージ、ViewModel からキー名を指定して呼び出される -->
        <l:InteractionMessageTrigger Messenger="{Binding Messenger}" MessageKey="Confirmation">
            <l:ConfirmationDialogInteractionMessageAction />
        </l:InteractionMessageTrigger>

        <!-- 画面をアクティブにする -->
        <l:InteractionMessageTrigger Messenger="{Binding Messenger}" MessageKey="WindowActiveAction">
            <!-- 非アクティブな状態からアクティブにする場合、InvokeActionOnlyWhenWindowIsActive を False にする必要あり -->
            <l:WindowInteractionMessageAction InvokeActionOnlyWhenWindowIsActive="False">
                <l:DirectInteractionMessage>
                    <l:WindowActionMessage Action="Active" />
                </l:DirectInteractionMessage>
            </l:WindowInteractionMessageAction>
        </l:InteractionMessageTrigger>

        <!--Windowが閉じたタイミングでViewModelのDisposeメソッドが呼ばれます-->
        <i:EventTrigger EventName="Closed">
            <l:DataContextDisposeAction/>
        </i:EventTrigger>

    </i:Interaction.Triggers>
    
    <!-- ViewModel をバインド -->
    <Window.DataContext>
        <local:MainViewModel />
    </Window.DataContext>
    
    <DockPanel>

        <!-- 画面上部、メニュー -->
        <Menu DockPanel.Dock="Top">
            <MenuItem Header="ファイル(_F)">

                <MenuItem Header="ソリューションファイルの選択...(_O)">

                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="Click">
                            <l:OpenFileDialogInteractionMessageAction>
                                <l:DirectInteractionMessage CallbackMethodTarget="{Binding}" CallbackMethodName="OpenFileDialogCallback">
                                    <l:OpeningFileSelectionMessage Filter="ソリューション ファイル(*.sln)|*.sln" Title="ソリューションファイルの選択" />
                                </l:DirectInteractionMessage>
                            </l:OpenFileDialogInteractionMessageAction>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                    
                </MenuItem>

                <Separator />

                <MenuItem Header="終了(_X)">
                    
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="Click">
                            <l:WindowInteractionMessageAction>
                                <l:DirectInteractionMessage>
                                    <l:WindowActionMessage Action="Close" />
                                </l:DirectInteractionMessage>
                            </l:WindowInteractionMessageAction>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                    
                </MenuItem>
            </MenuItem>
            
        </Menu>

        <!-- 残り領域は AvalonDock -->
        <dock:DockingManager 
            DocumentsSource="{Binding Documents}"
            AnchorablesSource="{Binding Anchorables}">

            <!-- 初期レイアウト -->
            <dock:LayoutRoot>
                <dock:LayoutPanel Orientation="Horizontal">
                    <dock:LayoutAnchorablePane Name="SolutionExplorerPlace" DockWidth="300" />
                    <dock:LayoutDocumentPane />
                </dock:LayoutPanel>
            </dock:LayoutRoot>

            <!-- ViewModel.ContentId を元に、対応する View の配置先を指定する -->
            <dock:DockingManager.LayoutUpdateStrategy>
                <local:LayoutInitializer>
                    <local:LayoutInsertTarget ContentId="SolutionExplorer" TargetLayoutName="SolutionExplorerPlace" />
                </local:LayoutInitializer>
            </dock:DockingManager.LayoutUpdateStrategy>

            <!-- ViewModel に対応する View を指定する -->
            <dock:DockingManager.LayoutItemTemplateSelector>
                <local:LayoutItemTemplateSelector>

                    <DataTemplate DataType="{x:Type local:SolutionExplorerViewModel}">
                        <local:SolutionExplorerView />
                    </DataTemplate>

                    <DataTemplate DataType="{x:Type local:SourceViewModel}">
                        <local:SourceView />
                    </DataTemplate>

                </local:LayoutItemTemplateSelector>
            </dock:DockingManager.LayoutItemTemplateSelector>

            <!-- ペイン部分の表示データをバインド -->
            <dock:DockingManager.LayoutItemContainerStyleSelector>
                <local:LayoutItemContainerStyleSelector>

                    <local:LayoutItemTypedStyle DataType="{x:Type local:AnchorablePaneViewModel}">
                        <Style TargetType="{x:Type dock:LayoutAnchorableItem}">
                            <Setter Property="Title" Value="{Binding Model.Title}" />
                            <Setter Property="CanHide" Value="{Binding Model.CanHide, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                            <Setter Property="CanClose" Value="{Binding Model.CanClose, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                            <Setter Property="CanFloat" Value="{Binding Model.CanFloat, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                            <Setter Property="IsActive" Value="{Binding Model.IsActive, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                            <Setter Property="IsSelected" Value="{Binding Model.IsSelected, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                        </Style>
                    </local:LayoutItemTypedStyle>

                    <local:LayoutItemTypedStyle DataType="{x:Type local:DocumentPaneViewModel}">
                        <Style TargetType="{x:Type dock:LayoutItem}">
                            <Setter Property="Title" Value="{Binding Model.Title}" />
                            <Setter Property="CanClose" Value="{Binding Model.CanClose, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                            <Setter Property="CanFloat" Value="{Binding Model.CanFloat, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                            <Setter Property="IsActive" Value="{Binding Model.IsActive, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                            <Setter Property="IsSelected" Value="{Binding Model.IsSelected, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                        </Style>
                    </local:LayoutItemTypedStyle>

                </local:LayoutItemContainerStyleSelector>
            </dock:DockingManager.LayoutItemContainerStyleSelector>

            <i:Interaction.Behaviors>
                <local:DocumentClosingBehavior DocumentClosingCommand="{Binding DocumentClosingCommand}" />
            </i:Interaction.Behaviors>
            
        </dock:DockingManager>


    </DockPanel>
    
</Window>
